name: linux-build
on:
  pull_request:
  release:
    types:
      - published
  push:
    tags: ["*"]
    branches:
      - main
      - dev
permissions:
  contents: write
# env:

jobs:
  build:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
        compiler:
          - gcc-13
        cmake_preset:
          - "unixlike-gcc-release"
          - "unixlike-gcc-debug"
          - "unixlike-aarch64-gcc-release"
    steps:
      - uses: actions/checkout@v4

      - name: Export env
        uses: cardinalby/export-env-action@v2
        with:
          envFile: ".github/constants.env"

      - name: Setup Cache
        uses: ./.github/actions/linux_setup_cache
        with:
          compiler: ${{ matrix.compiler }}
          cmake_preset: ${{ matrix.cmake_preset }}

      - name: Setup Tools
        working-directory: ./scripts
        run: |
          ./setup.sh

      - name: Project setup
        run: |
          tsx project.mts setup ${{matrix.cmake_preset}}

      - name: Cmake configure
        run: |
          tsx project.mts config

      - name: Cmake build
        run: |
          tsx project.mts build

      - name: Cmake test
        if: ${{ matrix.cmake_preset == 'unixlike-gcc-debug' || matrix.cmake_preset == 'unixlike-gcc-release' }}
        run: |
          tsx project.mts test

      - name: Coverage
        if: ${{ matrix.cmake_preset == 'unixlike-gcc-debug' || matrix.cmake_preset == 'unixlike-gcc-release' }}
        run: |
          tsx project.mts cov

      - name: Cmake pack
        if: startsWith(github.ref, 'refs/tags/') && contains(matrix.cmake_preset, 'release')
        run: |
          tsx project.mts pack

      - name: Publish Tagged Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && contains(matrix.cmake_preset, 'release')
        with:
          files: |
            ./out/build/${{matrix.cmake_preset}}/*-*${{ matrix.build_type }}*-*.*

      - name: Publish to codecov
        uses: codecov/codecov-action@v4
        with:
          flags: ${{ runner.os }}
          name: ${{ runner.os }}-coverage
          files: ./out/coverage/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
